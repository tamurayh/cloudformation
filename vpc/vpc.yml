AWSTemplateFormatVersion: "2010-09-09"
Description: 
  VPC and Subnet Create

Metadata: 
  "AWS::CloudFormation::Interface": #AWS CloudFormation コンソールに表示される場合の入力パラメーターのグループ化と順序を定義
    ParameterGroups: #パラメーターグループとそのグループに含めるパラメーターを定義
      - Label: #パラメーターグループの名前
          default: "Project Name Prefix"
        Parameters: 
          - PJPrefix
      - Label: 
          default: "Network Configuration"
        Parameters: #グループに含めるパラメーター論理IDのリスト
          - VPCCIDR
          - PublicSubnetACIDR
          - PublicSubnetCCIDR
          - PrivateSubnetACIDR
          - PrivateSubnetCCIDR
    ParameterLabels: #ラベルは、スタックが作成または更新されるときに、AWS CloudFormationコンソールの[Specify Parameters(パラメータの指定)]ページで表示されるフレンドリ名または説明を定義
      VPCCIDR: 
        default: "VPC CIDR" #10.1.0.0/16(デフォルト)
      PublicSubnetACIDR: 
        default: "PublicSubnetA CIDR" #10.1.10.0/24（デフォルト）
      PublicSubnetCCIDR: 
        default: "PublicSubnetC CIDR" #10.1.10.0/24（デフォルト）
      PrivateSubnetACIDR: 
        default: "PrivateSubnetA CIDR" #10.1.100.0/24（デフォルト）
      PrivateSubnetCCIDR: 
        default: "PrivateSubnetC CIDR" #10.1.200.0/24（デフォルト）

# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters: # 入力パラメータ
  PJPrefix: #構築するプロジェクトの環境を識別するために各コンポーネントの先頭に付与する識別子
    Type: String

  VPCCIDR:
    Type: String
    Default: "10.1.0.0/16"

  PublicSubnetACIDR:
    Type: String
    Default: "10.1.10.0/24"

  PublicSubnetCCIDR:
    Type: String
    Default: "10.1.20.0/24"

  PrivateSubnetACIDR:
    Type: String
    Default: "10.1.100.0/24"

  PrivateSubnetCCIDR:
    Type: String
    Default: "10.1.200.0/24"

Resources: #セクションの概要
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#
# VPC Create
  VPC: #VPCの作成
    Type: "AWS::EC2::VPC"
    Properties: # 入力パラメータ
      CidrBlock: !Ref VPCCIDR #!RefでVPCCIDRを取得
      EnableDnsSupport: "true" #VPC が Amazon 提供の DNS サーバーを介した DNS 解決策をサポート
      EnableDnsHostnames: "true" #VPC がパブリック IP アドレスを持つインスタンスへのパブリック DNS ホスト名の割り当てをサポート
      InstanceTenancy: default #インスタンスの起動時に別のテナンシーを明示的に指定しない限り、VPC に起動されたインスタンスは、デフォルトで共有ハードウェア上で実行
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-vpc" #PJPrefixで定めた値+-vpc

# InternetGateway Create
  InternetGateway: #InternetGatewayの作成
    Type: "AWS::EC2::InternetGateway" 
    Properties: # 入力パラメータ
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-igw" #PJPrefixで定めた値+-igw

# IGW Attach
  InternetGatewayAttachment: 
    Type: "AWS::EC2::VPCGatewayAttachment" #インターネットゲートウェイまたは仮想プライベートゲートウェイをVPCに接続し、インターネットとVPC間の接続
    Properties: # 入力パラメータ
      InternetGatewayId: !Ref InternetGateway #!RefでInternetGatewayIdを取得
      VpcId: !Ref VPC #!RefでVPCIdを取得

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#          
# Public SubnetA Create
  PublicSubnetA: #PublicSubnetAの作成
    Type: "AWS::EC2::Subnet"
    Properties: # 入力パラメータ
      AvailabilityZone: "ap-northeast-1a" #AZの選択
      CidrBlock: !Ref PublicSubnetACIDR #!RefでPublicSubnetACIDRの値を取得
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-public-subnet-a" #PJPrefixで定めた値+-public-subnet-a

# Public SubnetC Create
  PublicSubnetC: #PublicSubnetBの作成
    Type: "AWS::EC2::Subnet"
    Properties: 
      AvailabilityZone: "ap-northeast-1c" #AZの選択
      CidrBlock: !Ref PublicSubnetCCIDR #!RefでPublicSubnetCCIDRの値を取得
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-public-subnet-c" #PJPrefixで定めた値+-public-subnet-c

# Private SubnetA Create
  PrivateSubnetA: #PrivateSubnetAの作成
    Type: "AWS::EC2::Subnet" 
    Properties: # 入力パラメータ
      AvailabilityZone: "ap-northeast-1a" #AZの選択
      CidrBlock: !Ref PrivateSubnetACIDR #!RefでPrivateSubnetACIDRの値を取得
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-private-subnet-a" #PJPrefixで定めた値+-private-subnet-a

# Private SubnetC Create
  PrivateSubnetC: #PrivateSubnetCの作成
    Type: "AWS::EC2::Subnet" 
    Properties: # 入力パラメータ
      AvailabilityZone: "ap-northeast-1c" #AZの選択
      CidrBlock: !Ref PrivateSubnetCCIDR #!RefでPublicSubnetCCIDRの値を取得
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-private-subnet-c" #PJPrefixで定めた値+-private-subnet-c

# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#          
# Public RouteTableA Create
  PublicRouteTableA: #PublicRouteTableAの作成
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-public-route-a" #PJPrefixで定めた値+-public-route-a

# Public RouteTableC Create
  PublicRouteTableC: #PublicRouteTableCの作成
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-public-route-c" #PJPrefixで定めた値+-public-route-c

# Private RouteTableA Create
  PrivateRouteTableA: #PrivateRouteTableAの作成
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-private-route-a" #PJPrefixで定めた値+-private-route-a

# Private RouteTableC Create
  PrivateRouteTableC: #PrivateRouteTableCの作成
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC #!RefでVPCIdを取得
      Tags: 
        - Key: Name
          Value: !Sub "${PJPrefix}-private-route-c" #PJPrefixで定めた値+-private-route-c

# ------------------------------------------------------------#
# Routing
# ------------------------------------------------------------# 
# PublicRouteA Create
  PublicRouteA: 
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PublicRouteTableA 
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway 

# PublicRouteC Create
  PublicRouteC: 
    Type: "AWS::EC2::Route"
    Properties: 
      RouteTableId: !Ref PublicRouteTableC 
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway 

# ------------------------------------------------------------#
# RouteTable Associate
# ------------------------------------------------------------# 
# PublicRouteTable Associate SubnetA
  PublicSubnetARouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnetA 
      RouteTableId: !Ref PublicRouteTableA

# PublicRouteTable Associate SubnetC
  PublicSubnetCRouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PublicSubnetC 
      RouteTableId: !Ref PublicRouteTableC

# PrivateRouteTable Associate SubnetA
  PrivateSubnetARouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref PrivateRouteTableA 

# PrivateRouteTable Associate SubnetC
  PrivateSubnetCRouteTableAssociation: 
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    Properties: 
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref PrivateRouteTableC

# ------------------------------------------------------------#
# Output Parameters
# ------------------------------------------------------------#                
Outputs:
# VPC
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub "${PJPrefix}-vpc"

  VPCCIDR:
    Value: !Ref VPCCIDR
    Export:
      Name: !Sub "${PJPrefix}-vpc-cidr"

# Subnet
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: !Sub "${PJPrefix}-public-subnet-a"

  PublicSubnetACIDR:
    Value: !Ref PublicSubnetACIDR
    Export:
      Name: !Sub "${PJPrefix}-public-subnet-a-cidr"

  PublicSubnetC:
    Value: !Ref PublicSubnetC
    Export:
      Name: !Sub "${PJPrefix}-public-subnet-c"

  PublicSubnetCCIDR:
    Value: !Ref PublicSubnetCCIDR
    Export:
      Name: !Sub "${PJPrefix}-public-subnet-c-cidr"

  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: !Sub "${PJPrefix}-private-subnet-a"

  PrivateSubnetACIDR:
    Value: !Ref PrivateSubnetACIDR
    Export:
      Name: !Sub "${PJPrefix}-private-subnet-a-cidr"

  PrivateSubnetC:
    Value: !Ref PrivateSubnetC
    Export:
      Name: !Sub "${PJPrefix}-private-subnet-c"

  PrivateSubnetCCIDR:
    Value: !Ref PrivateSubnetCCIDR
    Export:
      Name: !Sub "${PJPrefix}-private-subnet-c-cidr"

# Route
  PublicRouteTableA:
    Value: !Ref PublicRouteTableA
    Export:
      Name: !Sub "${PJPrefix}-public-route-a"

  PublicRouteTableC:
    Value: !Ref PublicRouteTableC
    Export:
      Name: !Sub "${PJPrefix}-public-route-c"

  PrivateRouteTableA:
    Value: !Ref PrivateRouteTableA
    Export:
      Name: !Sub "${PJPrefix}-private-route-a"

  PrivateRouteTableC:
    Value: !Ref PrivateRouteTableC
    Export:
      Name: !Sub "${PJPrefix}-private-route-c"